grid=c(2,2), nfontsz=25, gridScale=50)
mobile_graph <- att.setv(g=mobile_graph,
from="name",
to="nodeAlias")
mobile_graph
resetd(rdp)
addGraph(rdp, mobile_graph)
mobile_adj <- get.adjacency(mobile_graph, attr="weight", sparse=T)
hc_mobile <- hclust(dist(mobile_adj), method="ward")
nesthc(rdp, hc, cutlevel=5, nmemb=4, labels=V(mobile_graph)$nodeAlias,
grid=c(2,2), nfontsz=25, gridScale=50)
mergeOutEdges(rdp, nlev=2)
?relax
relax(rdp,
updateContainerSize(rdp)
relax(rdp,
#     p1=200, ### edge target length
p2=400, ### edge stiffness
#     p3=200, ### node repel factor
#     p4=200, ### node perimeter effect
p5=30,  ### node speed limit
#     p6=200, ### nest-nest edge target length
#     p7=5,   ### nest-node repel factor=200
relax(rdp,
#     p1=200, ### edge target length
p2=400, ### edge stiffness
#     p3=200, ### node repel factor
#     p4=200, ### node perimeter effect
p5=30,  ### node speed limit
#     p6=200, ### nest-nest edge target length
#     p7=5,   ### nest-node repel factor=200
#     p8=20,  ### repulse radius
ps=T)   ### settings
updateContainerSize(rdp)
nesthc(rdp, hc, cutlevel=5, nmemb=5, labels=V(mobile_graph)$nodeAlias,
grid=c(2,2), nfontsz=25, gridScale=50)
mergeOutEdges(rdp, nlev=2)
updateContainerSize(rdp)
nesthc(rdp, hc, cutlevel=4, nmemb=3, labels=V(mobile_graph)$nodeAlias,
grid=c(2,2), nfontsz=25, gridScale=50)
resetd(rdp)
addGraph(rdp, mobile_graph)
nesthc(rdp, hc, cutlevel=4, nmemb=3, labels=V(mobile_graph)$nodeAlias,
grid=c(2,2), nfontsz=25, gridScale=50)
mergeOutEdges(rdp, nlev=2)
updateContainerSize(rdp)
relax(rdp,
#     p1=200, ### edge target length
p2=400, ### edge stiffness
#     p3=200, ### node repel factor
#     p4=200, ### node perimeter effect
p5=30,  ### node speed limit
#     p6=200, ### nest-nest edge target length
#     p7=5,   ### nest-node repel factor=200
#     p8=20,  ### repulse radius
ps=T)   ### settings
relax(rdp,
p1=135, ### edge target length
p2=415, ### edge stiffness
p3=123, ### node repel factor
p4=85, ### node perimeter effect
p5=30,  ### node speed limit
p6=140, ### nest-nest edge target length
p7=20,   ### nest-node repel factor
p8=9,  ### repulse radius
ps=T)   ### settings
resetd(rdp)
addGraph(rdp, mobile_graph, layout.kamada.kawai(mobile_graph))
nesthc(rdp, hc, cutlevel=4, nmemb=4, labels=V(mobile_graph)$nodeAlias,
grid=c(2,2), nfontsz=25, gridScale=50)
mergeOutEdges(rdp, nlev=2)
updateContainerSize(rdp)
relax(rdp,
p1=135, ### edge target length
p2=415, ### edge stiffness
p3=123, ### node repel factor
p5=30,  ### node speed limit
p6=140, ### nest-nest edge target length
p7=20,   ### nest-node repel factor
p8=9,  ### repulse radius
ps=T)   ### settings
p4=85, ### node perimeter effect
mobile_graph <- att.sete(g=mobile_graph,
from="net_invested",
to="edgeWidth",
xlim=c(5,25,1))
resetd(rdp)
addGraph(rdp, mobile_graph, layout.kamada.kawai(mobile_graph))
nesthc(rdp, hc, cutlevel=4, nmemb=4, labels=V(mobile_graph)$nodeAlias,
grid=c(2,2), nfontsz=25, gridScale=50)
mergeOutEdges(rdp, nlev=2)
updateContainerSize(rdp)
relax(rdp,
p1=245, ### edge target length
p2=415, ### edge stiffness
p3=123, ### node repel factor
p4=85, ### node perimeter effect
p5=30,  ### node speed limit
p6=140, ### nest-nest edge target length
p7=20,   ### nest-node repel factor
p8=9,  ### repulse radius
ps=T)   ### settings
mobile_graph <- att.setv(g=mobile_graph,
from="total_raised",
to="nodeFontSize",
xlim=c(5,25,1))
updateGraph(rdp)
?addGraph
updateContainerSize(rdp)
relax(rdp,
p1=245, ### edge target length
p2=415, ### edge stiffness
p3=123, ### node repel factor
p4=85, ### node perimeter effect
p5=30,  ### node speed limit
p6=140, ### nest-nest edge target length
p7=20,   ### nest-node repel factor
p8=9,  ### repulse radius
ps=T)   ### settings
filter(region_mobile, investor_region %in% c("SF Bay", "New York", "Boston"))
filter(region_mobile, investor_region %in% c("SF Bay", "New York", "Boston") && company_region %in% c("SF Bay", "New York", "Boston"))
filter(region_mobile, investor_region %in% c("SF Bay", "New York", "Boston") & company_region %in% c("SF Bay", "New York", "Boston"))
arrange(region_mobile, net_invested)
sample(510,1)
resetd(rdp)
addGraph(rdp, mobile_graph, layout.kamada.kawai(mobile_graph))
nesthc(rdp, hc, cutlevel=4, nmemb=4, labels=V(mobile_graph)$nodeAlias,
grid=c(2,2), nfontsz=25, gridScale=50)
mergeOutEdges(rdp, nlev=2)
updateContainerSize(rdp)
relax(rdp,
p1=245, ### edge target length
p2=415, ### edge stiffness
p3=123, ### node repel factor
p4=85, ### node perimeter effect
p5=30,  ### node speed limit
p6=140, ### nest-nest edge target length
p7=20,   ### nest-node repel factor
p8=9,  ### repulse radius
ps=T)   ### settings
update.packages()
filter(region_mobile, investor_region=="Tokyo")
load("~/GitHub/Crunchbase_Network/.RData")
filter(region_mobile, investor_region=="Tokyo")
head(region_mobile)
library(dplyr)
filter(region_mobile, investor_region=="Tokyo")
filter(region_mobile, company_region=="Beijing")
filter(region_mobile, company_region=="Seattle")
filter(region_mobile, company_region %in% c("Seattle", "Portland"))
head(both_invest)
filter(both_invest, company_region %in% c("Seattle", "Portland"))
filter(both_invest, investor_region %in% c("Seattle", "Portland"))
filter(region_mobile, investor_region %in% c("Minneapolis"))
filter(region_mobile, investor_region=="Minneapolis")
filter(both_invest, investor_region=="Minneapolis")
V(mobile_graph)$name
head(region_invest)
head(region_invest)
region_invest <- merge(both_invest, both_invest,
by.x=c("company_category_code", "investor_region", "company_region"),
by.y=c("company_category_code", "company_region", "investor_region"),
suffixes=c(".invest", ".comp"))
head(region_invest)
region_invest[is.na(region_invest)]
region_invest$total_invested.invest
?merge
is.na(region_invest$total_invested.invest)
region_invest <- merge(both_invest, both_invest,
by.x=c("company_category_code", "investor_region", "company_region"),
by.y=c("company_category_code", "company_region", "investor_region"),
suffixes=c(".invest", ".comp"),
all=T)
head(region_invest)
region_invest[is.na(region_invest)]
region_invest[is.na(region_invest)] <- 0
region_invest <- transform(region_invest,
net_invested = total_invested.invest - total_invested.comp)
head(region_invest)
region_invest <- filter(region_invest, net_invested>0)
arrange(count(region_invest$company_category_code), freq)
library(plyr)
arrange(count(region_invest$company_category_code), freq)
region_mobile <- filter(region_invest, company_category_code=="mobile")[,-1]
tail(arrange(filter(both_invest, company_category_code=="mobile"), total_invested))
tail(arrange(region_mobile, net_invested))
mobile_graph <- graph.data.frame(region_mobile, directed=T)
E(mobile_graph)$weight <- region_mobile$net_invested
mobile_graph <- att.mapv(g=mobile_graph,
dat=filter(invest_region_categ,
company_category_code=="mobile"))
mobile_graph <- att.setv(g=mobile_graph,
from="name",
to="nodeAlias")
mobile_graph <- att.setv(g=mobile_graph,
from="total_invested",
to="nodeSize",
xlim=c(25,50,1))
mobile_graph <- att.mapv(g=mobile_graph,
dat=filter(company_region_categ,
company_category_code=="mobile"))
mobile_graph <- att.setv(g=mobile_graph,
from="total_raised",
to="nodeFontSize",
xlim=c(5,25,1))
mobile_graph <- att.sete(g=mobile_graph,
from="net_invested",
to="edgeWeight")
mobile_graph <- att.sete(g=mobile_graph,
from="net_invested",
to="edgeWidth",
xlim=c(5,20,1))
### create environment for visualization
rdp <- RedPort()
calld(rdp)
resetd(rdp)
addGraph(rdp, mobile_graph, layout.kamada.kawai(mobile_graph))
resetd(rdp)
addGraph(rdp, mobile_graph, layout.kamada.kawai(mobile_graph))
mobile_graph
mobile_graph <- graph.data.frame(region_mobile, directed=T)
E(mobile_graph)$weight <- region_mobile$net_invested
plot(mobile_graph)
mobile_graph <- att.mapv(g=mobile_graph,
dat=filter(invest_region_categ,
company_category_code=="mobile"))
mobile_graph <- att.setv(g=mobile_graph,
from="name",
to="nodeAlias")
mobile_graph <- att.setv(g=mobile_graph,
from="total_invested",
to="nodeSize",
xlim=c(25,50,1))
mobile_graph <- att.mapv(g=mobile_graph,
dat=filter(company_region_categ,
company_category_code=="mobile"))
mobile_graph <- att.setv(g=mobile_graph,
from="total_raised",
to="nodeFontSize",
xlim=c(5,25,1))
mobile_graph <- att.sete(g=mobile_graph,
from="net_invested",
to="edgeWeight")
mobile_graph <- att.sete(g=mobile_graph,
from="net_invested",
to="edgeWidth",
xlim=c(5,20,1))
resetd(rdp)
addGraph(rdp, mobile_graph, layout.kamada.kawai(mobile_graph))
addGraph(rdp, mobile_graph)
resetd(rdp)
addGraph(rdp, mobile_graph)
mobile_graph
E(mobile_graph)$name
get.data.frame(mobile_Graph)
get.data.frame(mobile_graph)
head(get.data.frame(mobile_graph))
mobile_graph
V(mobile_graph)$nodeSize
invest_region_categ
head(invest_region_categ)
head(filter(invest_region_categ, company_category_code=="mobile"))
nrow(filter(invest_region_categ, company_category_code=="mobile"))
nrow(V(mobile_graph)$name)
V(mobile_graph)$name
nrow(region_mobile)
nrow(filter(invest_region_categ, company_category_code=="mobile"))
region_invest <- filter(region_invest, net_invested>0)
region_mobile <- filter(region_invest, company_category_code=="mobile")[,-1]
mobile_graph <- graph.data.frame(region_mobile, directed=T)
V(mobile_graph)$name
head(region_invest)
filter(region_invest, company_category_code=="mobile")
library(dplyr)
region_invest <- merge(both_invest, both_invest,
by.x=c("company_category_code", "investor_region", "company_region"),
by.y=c("company_category_code", "company_region", "investor_region"),
suffixes=c(".invest", ".comp"),
all=T)
head(region_invest)
region_invest[is.na(region_invest)] <- 0
region_invest <- transform(region_invest,
net_invested = total_invested.invest - total_invested.comp)
region_invest <- filter(region_invest, net_invested>0)
arrange(count(region_invest$company_category_code), freq)
region_mobile <- filter(region_invest, company_category_code=="mobile")[,-1]
tail(arrange(filter(both_invest, company_category_code=="mobile"), total_invested))
tail(arrange(region_mobile, net_invested))
View(region_mobile)
invest_region_categ <- recast(both_invest,
investor_region + company_category_code ~ variable,
sum,
measure.var="total_invested",
id.var=c("investor_region", "company_category_code"))
library(reshape)
rm(list=ls())
setwd("~/Github/Crunchbase_Network")
options(stringsAsFactors=F)
#### The following data was obtained from CrunchBase Data Exports
investments <- read.csv("~/Github/Crunchbase_Network/Data/investments.csv")
library(plyr)
library(dplyr)
colnames(investments)
filter(investments, company_name %in% c("Quid", "Palantir Technologies"))
num_firms <- ddply(investments,
.(company_name, funded_at, raised_amount_usd),
nrow)
investments <- filter(investments, raised_per_firm>0)
head(investments)
investments <- merge(investments, num_firms, all=T)
investments <- read.csv("~/Github/Crunchbase_Network/Data/investments.csv")
investments <- merge(investments, num_firms)
count(investments$company_category_code)
count(investments$raised_per_firm>0)
head(investments)
colnames(num_firms)[4] <- "nfirms"
num_firms <- transform(num_firms, raised_per_firm = raised_amount_usd/nfirms)
investments <- merge(investments, num_firms)
head(investments)
investments <- read.csv("~/Github/Crunchbase_Network/Data/investments.csv")
num_firms <- ddply(investments,
.(company_name, funded_at, raised_amount_usd),
nrow)
colnames(num_firms)[4] <- "nfirms"
num_firms <- transform(num_firms, raised_per_firm = raised_amount_usd/nfirms)
investments <- merge(investments, num_firms)
investments <- filter(investments, raised_per_firm>0)
count(investments$company_category_code)
### remove nonsense/useless categories
investments <- filter(investments,
!(company_category_code %in% c("", "6/28/2005", "other")))
count(investments$company_category_code)
investments[which(investments$company_category_code=="public_relation"),
"company_category_code"] <- "public_relations"
count(investments$company_category_code)
count(investments$investor_region)
### Remove useless regions
investments <- filter(investments, !(investor_region %in% c("unknown", "TBD")))
count(investments$company_region)
investments <- filter(investments, !(company_region %in% c("unknown", "TBD")))
investments <- transform(investments,
investor_region = toupper(investor_region),
company_region = toupper(company_region))
library(reshape2)
both_invest <- recast(investments,
company_category_code + investor_region + company_region ~ variable,
sum,
measure.var="raised_per_firm",
id.var=c("company_category_code", "investor_region", "company_region"))
colnames(both_invest)[4] <- "total_invested"
invest_region_categ <- recast(both_invest,
investor_region + company_category_code ~ variable,
sum,
measure.var="total_invested",
id.var=c("investor_region", "company_category_code"))
company_region_categ <- recast(both_invest,
company_region + company_category_code ~ variable,
sum,
measure.var="total_invested",
id.var=c("company_region", "company_category_code"))
colnames(company_region_categ)[3] <- "total_raised"
region_invest <- merge(both_invest, both_invest,
by.x=c("company_category_code", "investor_region", "company_region"),
by.y=c("company_category_code", "company_region", "investor_region"),
suffixes=c(".invest", ".comp"),
all=T)
head(region_invest)
region_invest[is.na(region_invest)] <- 0
region_invest <- transform(region_invest,
net_invested = total_invested.invest - total_invested.comp)
region_invest <- filter(region_invest, net_invested>0)
head(region_invest)
arrange(count(region_invest$company_category_code), freq)
library(igraph)
region_mobile <- filter(region_invest, company_category_code=="mobile")[,-1]
tail(arrange(filter(both_invest, company_category_code=="mobile"), total_invested))
tail(arrange(region_mobile, net_invested))
mobile_graph <- graph.data.frame(region_mobile, directed=T)
E(mobile_graph)$weight <- region_mobile$net_invested
library(RedeR)
mobile_graph <- att.mapv(g=mobile_graph,
dat=filter(invest_region_categ,
company_category_code=="mobile"))
mobile_graph <- att.setv(g=mobile_graph,
from="name",
to="nodeAlias")
mobile_graph <- att.setv(g=mobile_graph,
from="total_invested",
to="nodeSize",
xlim=c(25,50,1))
mobile_graph <- att.mapv(g=mobile_graph,
dat=filter(company_region_categ,
company_category_code=="mobile"))
mobile_graph <- att.setv(g=mobile_graph,
from="total_raised",
to="nodeFontSize",
xlim=c(5,25,1))
mobile_graph <- att.sete(g=mobile_graph,
from="net_invested",
to="edgeWeight")
mobile_graph <- att.sete(g=mobile_graph,
from="net_invested",
to="edgeWidth",
xlim=c(5,20,1))
resetd(rdp)
rdp <- RedPort()
calld(rdp)
calld(rdp)
resetd(rdp)
addGraph(rdp, mobile_graph)
head(mobile_Graph)
head(mobile_graph)
mobile_graph
V(mobile_graph)$nodeSize
head(invest_region_categ)
nrow(filter(invest_region_categ, company_category_code=="mobile"))
relax(rdp)
region_invest <- merge(both_invest, both_invest,
by.x=c("company_category_code", "investor_region", "company_region"),
by.y=c("company_category_code", "company_region", "investor_region"),
suffixes=c(".invest", ".comp"))
head(region_invest)
region_invest[is.na(region_invest)] <- 0
region_invest <- transform(region_invest,
net_invested = total_invested.invest - total_invested.comp)
region_invest <- filter(region_invest, net_invested>0)
arrange(count(region_invest$company_category_code), freq)
region_mobile <- filter(region_invest, company_category_code=="mobile")[,-1]
tail(arrange(filter(both_invest, company_category_code=="mobile"), total_invested))
### amongst all investment patterns, the largest pairing within mobile is
### sf bay investing within itself
tail(arrange(region_mobile, net_invested))
### when excluding within region investments, the largest pairing is
### sf bay investing within Seattle
library(igraph)
mobile_graph <- graph.data.frame(region_mobile, directed=T)
E(mobile_graph)$weight <- region_mobile$net_invested
#### RedeR is a fantastic tool for visualizing networks
#### This package allows for a framework for visualizing the hierarchical/modular
#### nature of networks. Most importantly, it comes with built-in force-directed
#### algorithms for optimizing network graph layouts
library(RedeR)
### Add some additional attributes to the graph
mobile_graph <- att.mapv(g=mobile_graph,
dat=filter(invest_region_categ,
company_category_code=="mobile"))
mobile_graph <- att.setv(g=mobile_graph,
from="name",
to="nodeAlias")
mobile_graph <- att.setv(g=mobile_graph,
from="total_invested",
xlim=c(25,50,1))
mobile_graph <- att.mapv(g=mobile_graph,
dat=filter(company_region_categ,
company_category_code=="mobile"))
mobile_graph <- att.setv(g=mobile_graph,
to="nodeSize",
from="total_raised",
to="nodeFontSize",
xlim=c(5,25,1))
mobile_graph <- att.sete(g=mobile_graph,
from="net_invested",
to="edgeWeight")
mobile_graph <- att.setv(g=mobile_graph,
from="total_invested",
to="nodeSize",
xlim=c(25,50,1))
mobile_graph <- att.mapv(g=mobile_graph,
dat=filter(company_region_categ,
company_category_code=="mobile"))
mobile_graph <- att.setv(g=mobile_graph,
from="total_raised",
to="nodeFontSize",
xlim=c(5,25,1))
mobile_graph <- att.sete(g=mobile_graph,
from="net_invested",
to="edgeWeight")
mobile_graph <- att.sete(g=mobile_graph,
from="net_invested",
to="edgeWidth",
xlim=c(5,20,1))
resetd(rdp)
addGraph(rdp, mobile_graph, layout.kamada.kawai(mobile_graph))
relax(rdp)
mobile_adj <- get.adjacency(mobile_graph, attr="weight", sparse=T)
hc_mobile <- hclust(dist(mobile_adj), method="ward")
nesthc(rdp, hc_mobile, cutlevel=5, nmemb=4, labels=V(mobile_graph)$nodeAlias,
grid=c(2,2), nfontsz=25, gridScale=50)
updateContainerSize(rdp)
relax(rdp,
p1=245, ### edge target length
p2=415, ### edge stiffness
p3=123, ### node repel factor
p4=85, ### node perimeter effect
p5=30,  ### node speed limit
p6=140, ### nest-nest edge target length
p7=20,   ### nest-node repel factor
p8=9,  ### repulse radius
ps=T)   ### settings
library(d3Network)
d3SimpleNetwork(Data=region_mobile[,c(1,2,5)],
fontsize=15,
file="mobie_region_graph_test.html")
calld(rdp)
resetd(rdp)
addGraph(rdp, mobile_graph, layout.kamada.kawai(mobile_graph))
resetd(rdp)
addGraph(rdp, mobile_graph, layout.kamada.kawai(mobile_graph))
calld(rdp)
resetd(rdp)
addGraph(rdp, mobile_graph, layout.kamada.kawai(mobile_graph))
relax(rdp)
